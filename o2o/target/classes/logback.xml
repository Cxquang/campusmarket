<?xml version="1.0" encoding="UTF-8"?>
<!-- 当scan属性设置为true时,配置文件如果发生改变,将会重新被加载
	scanPeriod:设置扫描配置文件时间间隔，默认单位是毫秒，默认间隔为每分钟
	debug:如果为true,将会打印logback的内部信息，由于logback比较稳定，一般不需要查看信息，故设置为false
 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 定义参数常量(全局变量) -->
	<!-- TRACE<DEBUG<INFO<WARN<ERROR -->
	<!-- 如果在程序中写如logger.trace("msg")  logger.debug...
		定义的级别为INFO,那么DEBUG和TRACE级别将不显示
		
		实际只用到DEBUG,INFO,ERROR这三个级别,并分别保存到三个文件当中
	 -->
	<property name="log.level" value="debug"/>
	<property name="log.maxHistory" value="30"/>
	<!-- catalina.base:是tomcat实例的根目录 -->
	<property name="log.filePath" value="${catalina.base}/logs/webapps"/>
	<!-- <property name="log.filePath" value="${project}/logs"/> -->
	<!-- <property name="log.filePath" value="${user.dir}/logs"/> -->
	<property name="log.pattern" 
		value="%d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %-5level %logger{50} - %msg%n"/>
	<!-- 控制台设置 -->
	<appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 可以将event事件转换为一组byte数组，并且将转换后的数据输出到文件中 -->
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
	</appender>
	<!-- DEBUG -->
	<appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/debug.log</file>
		<!-- 滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<!-- 文件最大保存历史数量 -->
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${log.pattern}</pattern>		
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<!-- 如果是DEBUG级别，就保留 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 不是DEBUG级别就拒绝 -->
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- INFO -->
	<appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/info.log</file>
		<!-- 滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<!-- 文件最大保存历史数量 -->
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${log.pattern}</pattern>		
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<!-- 如果是DEBUG级别，就保留 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 不是DEBUG级别就拒绝 -->
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- ERROR -->
	<appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 文件路径 -->
		<file>${log.filePath}/error.log</file>
		<!-- 滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 文件名称 -->
			<fileNamePattern>${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<!-- 文件最大保存历史数量 -->
			<maxHistory>${log.maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${log.pattern}</pattern>		
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<!-- 如果是DEBUG级别，就保留 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 不是DEBUG级别就拒绝 -->
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- 存放日志对象，同时告诉logback关注哪个package下面的信息 -->
	<logger name="com.cxq.o2o" level="${log.level}" additivity="true">
		<appender-ref ref="debugAppender"/>
		<appender-ref ref="infoAppender"/>
		<appender-ref ref="errorAppender"/>
	</logger>
	
	<root level="info">
		<appender-ref ref="consoleAppender"/>
	</root>
</configuration>